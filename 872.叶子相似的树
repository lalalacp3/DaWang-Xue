# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def leafSimilar(self, root1: TreeNode, root2: TreeNode) -> bool:
        leaf1=[]
        leaf2=[]
        def dfs(root,leaf):
            if root.left==None and root.right==None:
                leaf.append(root.val)
                return 
            if root.left:
                dfs(root.left,leaf)
            if root.right:
                dfs(root.right,leaf)
            return leaf
        dfs(root1,leaf1)
        dfs(root2,leaf2)
        return leaf1==leaf2
        
        深度优先，把两个树的底层放入两个list
